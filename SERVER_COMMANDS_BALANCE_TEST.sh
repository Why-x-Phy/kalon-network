#!/bin/bash
# Kalon Balance Test - Ubuntu Server Commands

echo "üöÄ Kalon Balance Test - Schritt f√ºr Schritt"
echo "=========================================="
echo ""

# Schritt 1: Repository aktualisieren
echo "üì• Schritt 1: Repository aktualisieren..."
cd ~/kalon-network
git pull origin master
echo "‚úÖ Repository aktualisiert"
echo ""

# Schritt 2: Alte Prozesse stoppen
echo "üõë Schritt 2: Alte Prozesse stoppen..."
pkill -f kalon-node
pkill -f kalon-miner
sleep 2
echo "‚úÖ Prozesse gestoppt"
echo ""

# Schritt 3: Alte Builds l√∂schen
echo "üóëÔ∏è Schritt 3: Alte Builds l√∂schen..."
rm -rf build-v2/
echo "‚úÖ Builds gel√∂scht"
echo ""

# Schritt 4: Neu kompilieren
echo "üî® Schritt 4: Neu kompilieren..."
./scripts/build-v2.sh
echo "‚úÖ Kompilierung abgeschlossen"
echo ""

# Schritt 5: Node starten
echo "üöÄ Schritt 5: Node starten..."
nohup ./build-v2/kalon-node-v2 --datadir data-v2/testnet --genesis genesis/testnet.json --rpc :16316 --p2p :17335 > node-v2.log 2>&1 &
NODE_PID=$!
echo "‚úÖ Node gestartet (PID: $NODE_PID)"
echo ""

# Schritt 6: Warten
echo "‚è≥ Schritt 6: Warten (5 Sekunden)..."
sleep 5
echo "‚úÖ Wartezeit abgeschlossen"
echo ""

# Schritt 7: Miner starten
echo "‚õèÔ∏è Schritt 7: Miner starten..."
nohup ./build-v2/kalon-miner-v2 --wallet kalon1r9wen9um8qwfdxdyk9u5yr3sd5ym5vrj72cttt --threads 2 --rpc http://localhost:16316 > miner-v2.log 2>&1 &
MINER_PID=$!
echo "‚úÖ Miner gestartet (PID: $MINER_PID)"
echo ""

# Schritt 8: Warten bis Block gemint ist
echo "‚è≥ Schritt 8: Warten auf geminten Block (60 Sekunden)..."
echo "   (Miner log kann mit 'tail -f miner-v2.log' verfolgt werden)"
sleep 60
echo "‚úÖ Wartezeit abgeschlossen"
echo ""

# Schritt 9: Balance pr√ºfen
echo "üí∞ Schritt 9: Balance pr√ºfen..."
echo ""
curl -s http://localhost:16316 -X POST -H 'Content-Type: application/json' \
  -d '{"jsonrpc":"2.0","id":1,"method":"getBalance","params":{"address":"kalon1r9wen9um8qwfdxdyk9u5yr3sd5ym5vrj72cttt"}}' | jq
echo ""

# Schritt 10: Height pr√ºfen
echo "üìä Schritt 10: Block-Height pr√ºfen..."
HEIGHT=$(curl -s http://localhost:16316 -X POST -H 'Content-Type: application/json' \
  -d '{"jsonrpc":"2.0","id":1,"method":"getHeight","params":[]}' | jq -r '.result')
echo "   Height: $HEIGHT"
echo ""

# Schritt 11: Logs pr√ºfen
echo "üìù Schritt 11: UTXO-Logs pr√ºfen..."
echo "   (Letzte 20 UTXO-Eintr√§ge)"
tail -100 node-v2.log | grep "UTXO\|Address" | tail -20
echo ""

echo "=========================================="
echo "‚úÖ Balance-Test abgeschlossen!"
echo ""
echo "üîç Wenn Balance = 0:"
echo "   - Pr√ºfe 'node-v2.log' f√ºr UTXO-Erstellung"
echo "   - Pr√ºfe 'miner-v2.log' f√ºr Mining-Activity"
echo ""
echo "üìä Monitor-Befehle:"
echo "   tail -f node-v2.log    # Node-Logs"
echo "   tail -f miner-v2.log   # Miner-Logs"
echo ""
